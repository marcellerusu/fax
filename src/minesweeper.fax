write/local-storage("width", 10) when read/local-storage("width", nil)
write/local-storage("height", 10) when read/local-storage("height", nil)
write/local-storage("total-mines", 9) when read/local-storage("height", nil)

write/state/mines(loop |num-mines-left, mines| {
  if num-mines-left = 0
    return(mines)
  else
    x := rand-int(width),
    y := rand-int(height),
    if mines[y][x] then
      continue(..)
    else 
      continue(
        num-mines-left - 1,
        #[ ..mines | [y] = #[ ..mines[y] | [x] = true ] ]
      )
    end
  end
} starting-with #[
  read/local-storage("total-mines"),
  fill(0..height, fill(0..width, false))
]) when
  width := read/local-storage("width"),
  height := read/local-storage("height")
end

write/html/body(<div class="board" />)
write/html/append(.board, fill(0..read/state/height, <span class="row" />))
write/html/append(.row, fill(0..read/state/width, <div class="cell" />))

write/html/attr(.row:nth-child(y) .cell:nth-child(x), #<data-{x} data-{y}>)
write/html/attr([data-{x}][data-{y}][class="cell"], #<class="cell mine">)
  when read/state/mines[y][x] = true

write/html/attr(.cell[data-{x}][data-{y}], #[data-{count}]) when
  count := read/html/len(.cell[data-x={xs}][data-y={ys}].mine:not([data-{x}][data-{y}]))
  xs := (x - 1)..(x + 1),
  ys := (y - 1)..(y + 1)
end

write/html/append(.cell, <Flag />)
write/html/append(.cell.mine, <Mine />)
write/html/append(.cell[data-{count}], <Number {count} />) when count > 0

write/fail("num of mines must always equal settings") when
  read/html/len(.cell.mine) != read/local-storage("total-mines")

write/html/class/add(.cell[data-x={xs}][data-y={ys}]:not(.open), "open"),
write/html/event/expand(.cell[data-x={xs}][data-y={ys}]:not(.open, [data-{x}][data-{y}])) when
  xs := (x - 1)..(x + 1),
  ys := (y - 1)..(y + 1),
  read/html/event/(click|expand)(.cell[data-{x}][data-{y}][data-{count}]),
  read/html/len(.cell[data-x={xs}][data-y={ys}].flagged) = count
end

write/html/class/add(.cell[data-{x}][data-{y}], "open") when  
  read/html/event/click(.cell[data-{x}][data-{y}]:not(.open))
